问题背景：这是一个Java项目的代码仓库，开发人员询问项目代码仓库的整体架构，主要关注其目录结构、模块职责、依赖关系方面


    1. 分析项目的目录结构，项目代码的目录结构如下：│  module-info.java
│  
└─org
    └─jetuml
        │  JetUML.css
        │  JetUML.java
        │  JetUML.properties
        │  
        ├─annotations
        │      Flyweight.java
        │      Immutable.java
        │      Singleton.java
        │      TemplateMethod.java
        │      
        ├─application
        │      ApplicationResources.java
        │      Clipboard.java
        │      FileExtensions.java
        │      RecentFilesQueue.java
        │      UserPreferences.java
        │      Version.java
        │      
        ├─diagram
        │  │  AbstractDiagramElement.java
        │  │  Diagram.java
        │  │  DiagramData.java
        │  │  DiagramElement.java
        │  │  DiagramType.java
        │  │  Edge.java
        │  │  Node.java
        │  │  Properties.java
        │  │  Property.java
        │  │  PropertyName.java
        │  │  Prototypes.java
        │  │  
        │  ├─builder
        │  │      ClassDiagramBuilder.java
        │  │      CompoundOperation.java
        │  │      DiagramBuilder.java
        │  │      DiagramOperation.java
        │  │      DiagramOperationProcessor.java
        │  │      ObjectDiagramBuilder.java
        │  │      SequenceDiagramBuilder.java
        │  │      SimpleOperation.java
        │  │      StateDiagramBuilder.java
        │  │      UseCaseDiagramBuilder.java
        │  │      
        │  ├─edges
        │  │      AbstractEdge.java
        │  │      AggregationEdge.java
        │  │      AssociationEdge.java
        │  │      CallEdge.java
        │  │      ConstructorEdge.java
        │  │      DependencyEdge.java
        │  │      GeneralizationEdge.java
        │  │      NoteEdge.java
        │  │      ObjectCollaborationEdge.java
        │  │      ObjectReferenceEdge.java
        │  │      ReturnEdge.java
        │  │      SingleLabelEdge.java
        │  │      StateTransitionEdge.java
        │  │      ThreeLabelEdge.java
        │  │      UseCaseAssociationEdge.java
        │  │      UseCaseDependencyEdge.java
        │  │      UseCaseGeneralizationEdge.java
        │  │      
        │  ├─nodes
        │  │      AbstractNode.java
        │  │      AbstractPackageNode.java
        │  │      ActorNode.java
        │  │      CallNode.java
        │  │      ClassNode.java
        │  │      FieldNode.java
        │  │      FinalStateNode.java
        │  │      ImplicitParameterNode.java
        │  │      InitialStateNode.java
        │  │      InterfaceNode.java
        │  │      NamedNode.java
        │  │      NoteNode.java
        │  │      ObjectNode.java
        │  │      PackageDescriptionNode.java
        │  │      PackageNode.java
        │  │      PointNode.java
        │  │      StateNode.java
        │  │      TypeNode.java
        │  │      UseCaseNode.java
        │  │      
        │  └─validator
        │      │  AbstractDiagramValidator.java
        │      │  ClassDiagramValidator.java
        │      │  DiagramValidator.java
        │      │  EdgeConstraint.java
        │      │  ObjectDiagramValidator.java
        │      │  SequenceDiagramValidator.java
        │      │  StateDiagramValidator.java
        │      │  UseCaseDiagramValidator.java
        │      │  Violation.java
        │      │  
        │      └─constraints
        │              ConstraintCallEdgeBetweenCallNodes.java
        │              ConstraintMaxNumberOfEdgesOfGivenTypeBetweenNodes.java
        │              ConstraintMaxOneCaller.java
        │              ConstraintNoCombinedAssociationAggregation.java
        │              ConstraintNoDirectCyclesForEdgeType.java
        │              ConstraintNoEdgeToNoteExceptNoteEdge.java
        │              ConstraintNoEdgeToPointExceptNoteEdge.java
        │              ConstraintNoSelfEdgeForEdgeType.java
        │              ConstraintReturnEdgeBetweenCallNodes.java
        │              ConstraintReturnsToCaller.java
        │              ConstraintValidCollaborationEdge.java
        │              ConstraintValidNoteEdge.java
        │              ConstraintValidReferenceEdge.java
        │              ConstraintValidTransitionEdgeEndNode.java
        │              ConstraintValidTransitionEdgeStartNode.java
        │              
        ├─geom
        │      Dimension.java
        │      Direction.java
        │      GeomUtils.java
        │      Line.java
        │      Point.java
        │      Rectangle.java
        │      
        ├─gui
        │  │  AboutDialog.java
        │  │  ColorScheme.java
        │  │  DarkMode.css
        │  │  DeserializationErrorAlert.java
        │  │  DiagramCanvas.java
        │  │  DiagramSizeDialog.java
        │  │  DiagramTab.java
        │  │  DiagramTabToolBar.java
        │  │  DialogStage.java
        │  │  EditorFrame.java
        │  │  FontDialog.java
        │  │  GuiUtils.java
        │  │  KeyEventHandler.java
        │  │  MenuFactory.java
        │  │  MouseDraggedGestureHandler.java
        │  │  MoveTracker.java
        │  │  NamedHandler.java
        │  │  NewDiagramHandler.java
        │  │  Notification.java
        │  │  NotificationService.java
        │  │  NotificationTimeDialog.java
        │  │  PropertyEditorDialog.java
        │  │  PropertySheet.java
        │  │  SelectableToolButton.java
        │  │  SelectionObserver.java
        │  │  ToastNotification.java
        │  │  ViewportProjection.java
        │  │  WelcomeTab.java
        │  │  
        │  └─tips
        │          Media.java
        │          TipCategory.java
        │          TipDialog.css
        │          TipDialog.java
        │          TipElement.java
        │          TipFieldName.java
        │          TipLoader.java
        │          UserGuideGenerator.java
        │          View.java
        │          ViewedTips.java
        │          
        ├─persistence
        │  │  AbstractContext.java
        │  │  DeserializationContext.java
        │  │  DeserializationException.java
        │  │  JsonDecoder.java
        │  │  JsonEncoder.java
        │  │  PersistenceService.java
        │  │  SerializationContext.java
        │  │  
        │  └─json
        │          CharacterBuffer.java
        │          CharacterEscapes.java
        │          JsonAnyValueParser.java
        │          JsonArray.java
        │          JsonArrayParser.java
        │          JsonBooleanParser.java
        │          JsonException.java
        │          JsonIntegerParser.java
        │          JsonObject.java
        │          JsonObjectParser.java
        │          JsonParser.java
        │          JsonParsingException.java
        │          JsonStringParser.java
        │          JsonValueParser.java
        │          JsonValueValidator.java
        │          JsonWriter.java
        │          ParsableCharacterBuffer.java
        │          
        └─rendering
            │  AbstractDiagramRenderer.java
            │  ArrowHead.java
            │  ClassDiagramRenderer.java
            │  DiagramElementRenderer.java
            │  DiagramRenderer.java
            │  EdgePath.java
            │  EdgePriority.java
            │  FontMetrics.java
            │  Grid.java
            │  LineStyle.java
            │  NodeCorner.java
            │  ObjectDiagramRenderer.java
            │  RenderingUtils.java
            │  SequenceDiagramRenderer.java
            │  Side.java
            │  StateDiagramRenderer.java
            │  StringRenderer.java
            │  ToolGraphics.java
            │  UseCaseDiagramRenderer.java
            │  
            ├─edges
            │      AbstractEdgeRenderer.java
            │      ArrowHeadRenderer.java
            │      CallEdgeRenderer.java
            │      EdgeRenderer.java
            │      EdgeStorage.java
            │      LabeledStraightEdgeRenderer.java
            │      NodeIndex.java
            │      NoteEdgeRenderer.java
            │      ObjectCollaborationEdgeRenderer.java
            │      ObjectReferenceEdgeRenderer.java
            │      ReturnEdgeRenderer.java
            │      StateTransitionEdgeRenderer.java
            │      StoredEdgeRenderer.java
            │      StraightEdgeRenderer.java
            │      UseCaseAssociationEdgeRenderer.java
            │      UseCaseDependencyEdgeRenderer.java
            │      UseCaseGeneralizationEdgeRenderer.java
            │      
            └─nodes
                    AbstractNodeRenderer.java
                    AbstractPackageNodeRenderer.java
                    ActorNodeRenderer.java
                    CallNodeRenderer.java
                    CircularStateNodeRenderer.java
                    FieldNodeRenderer.java
                    ImplicitParameterNodeRenderer.java
                    InterfaceNodeRenderer.java
                    NodeRenderer.java
                    NodeStorage.java
                    NoteNodeRenderer.java
                    ObjectNodeRenderer.java
                    PackageDescriptionNodeRenderer.java
                    PackageNodeRenderer.java
                    PointNodeRenderer.java
                    StateNodeRenderer.java
                    TypeNodeRenderer.java
                    UseCaseNodeRenderer.java


    2. 分析项目的主要模块及其作用，核心模块包括：annotations模块，定义了一些Java注解；application模块，包括应用版本、用户偏好设置、应用资源等；diagram模块，包括图、节点和边的类定义以及图的构建类；geom模块，定义基本几何图形类；gui模块，用于构建图形用户界面；persistence模块，提供持久化服务；rendering模块，提供图形元素的渲染功能


    3. 识别项目的依赖，项目的依赖包括：Java库：java.lang.annotation包中的ElementType、Retention、RetentionPolicy、Target；java.util包中的MissingResourceException、ResourceBundle、stream、ArrayList、List、Set、function；java.lang.Math；javafx.geometry；javafx.scene；javafx.stage；javafx.bean


    4. 阅读项目相关资料（如README、设计文档、API文档等）：A lightweight desktop application for interactively creating and editing diagrams in the Unified Modeling Language. JetUML supports the sketching of software design ideas with a minimum of fuss. Diagrams can be saved in JSON, exported to popular image formats, and copied to the system clipboard for integration with other tools. Supports class diagrams, sequence diagrams, state diagrams, object diagrams, and use case diagrams. 


    5. 总结：根据以上分析步骤，生成关于这个代码仓库的详细架构分析报告
    
    注意：只需要输出最后的总结，中间分析步骤不需要输出
    